// Prisma SQLite Schema for EduTech Chatbot
// Migrated from MongoDB to SQLite with cloud migration support

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") // file:./data/edutech.db
}

// 교재 모델
model Textbook {
  id        String   @id @default(uuid())
  title     String   // 교재명
  publisher String   // 출판사  
  subject   String   // 과목 (국어, 문학 등)
  level     String   // 학년 (고1, 고2, 고3)
  grade     String   // 학기
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // 관계: 교재 ↔ 지문세트 (다대다)
  passageSets PassageSetTextbook[]

  @@map("textbooks")
}

// 지문세트 모델
model PassageSet {
  id             String   @id @default(uuid())
  title          String   // 지문 제목
  passage        String   // 지문 내용 (TEXT)
  passageComment String   // 지문 해설 (TEXT)
  qrCode         String   @unique // 고유 QR 코드 (6자리)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // 관계: 지문세트 ↔ 교재 (다대다)
  textbooks PassageSetTextbook[]
  
  // 관계: 지문세트 ↔ 문제 (일대다)
  questions Question[]

  @@map("passage_sets")
}

// 교재-지문세트 연결 테이블 (다대다 관계)
model PassageSetTextbook {
  textbookId   String
  passageSetId String
  
  textbook   Textbook   @relation(fields: [textbookId], references: [id], onDelete: Cascade)
  passageSet PassageSet @relation(fields: [passageSetId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())

  @@id([textbookId, passageSetId])
  @@map("passage_set_textbooks")
}

// 문제 모델
model Question {
  id             String     @id @default(uuid())
  setId          String     // 지문세트 참조
  questionNumber Int        // 문제 번호
  questionText   String     // 문제 내용 (TEXT)
  optionsJson    String     // 선택지 배열 (JSON string) - SQLite array 대체
  correctAnswer  String     // 정답
  explanation    String     // 해설 (마크다운, TEXT)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  // 관계: 문제 → 지문세트 (다대일)
  passageSet PassageSet @relation(fields: [setId], references: [id], onDelete: Cascade)

  // 복합 유니크 인덱스: 같은 지문세트 내에서 문제번호는 유일
  @@unique([setId, questionNumber])
  @@map("questions")
}

// 시스템 프롬프트 모델
model SystemPrompt {
  id          String   @id @default(uuid())
  key         String   @unique // 프롬프트 식별자
  name        String   // 표시명
  description String   // 설명
  content     String   // 프롬프트 내용 (TEXT)
  isActive    Boolean  @default(true) // 활성화 여부
  version     Int      @default(1) // 현재 버전 번호
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // 관계: 프롬프트 ↔ 버전 히스토리 (일대다)
  versions SystemPromptVersion[]

  @@map("system_prompts")
}

// 시스템 프롬프트 버전 히스토리
model SystemPromptVersion {
  id          String   @id @default(uuid())
  promptKey   String   // 원본 프롬프트 키 참조
  content     String   // 해당 버전 내용 (TEXT)
  version     Int      // 버전 번호
  description String   // 버전 설명
  createdBy   String   // 생성자
  createdAt   DateTime @default(now())

  // 관계: 버전 → 프롬프트 (다대일)
  systemPrompt SystemPrompt @relation(fields: [promptKey], references: [key], onDelete: Cascade)

  // 복합 유니크 인덱스: 같은 프롬프트에서 버전 번호는 유일
  @@unique([promptKey, version])
  @@map("system_prompt_versions")
}

// 성능 최적화용 인덱스들
// SQLite는 자동으로 기본 인덱스를 생성하지만 명시적으로 정의