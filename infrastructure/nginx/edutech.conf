# Nginx Configuration for EduTech ChatBot on Mac Mini
# 기존 서비스와 공존하면서 새 도메인으로 서비스 제공

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=chat_limit:10m rate=30r/s;

# Upstream servers
upstream edutech_web {
    server 127.0.0.1:3300;
    keepalive 32;
}

upstream edutech_api {
    server 127.0.0.1:3001;
    keepalive 16;
}

upstream edutech_static {
    server 127.0.0.1:8080;
    keepalive 8;
}

# Main server block for new domain
server {
    listen 80;
    server_name your-new-domain.com www.your-new-domain.com;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Log files
    access_log /var/log/nginx/edutech_access.log;
    error_log /var/log/nginx/edutech_error.log;

    # Root directory for static files
    root /var/www/edutech-chatbot/data/files;

    # Client upload limits
    client_max_body_size 50M;
    client_body_timeout 60s;

    # API routes (백엔드 Express.js)
    location /api {
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://edutech_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS headers (백엔드에서도 설정하지만 추가 보안)
        add_header Access-Control-Allow-Origin "https://your-new-domain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Preflight requests
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }

    # Chat API (특별한 rate limiting)
    location /api/chat {
        # Chat-specific rate limiting
        limit_req zone=chat_limit burst=50 nodelay;
        
        proxy_pass http://edutech_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Longer timeouts for AI responses
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Static files (QR 코드, 업로드 파일 등)
    location /files {
        alias /var/www/edutech-chatbot/data/files;
        
        # Cache static files
        expires 1h;
        add_header Cache-Control "public, no-transform";
        
        # Security for uploaded files
        location ~* \.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # QR code images
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 1d;
            add_header Cache-Control "public, no-transform";
        }
        
        try_files $uri $uri/ =404;
    }

    # Main frontend app (Next.js)
    location / {
        proxy_pass http://edutech_web;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Next.js specific settings
        proxy_buffering off;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Next.js static files
    location /_next/static {
        proxy_pass http://edutech_web;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Robots.txt
    location /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /files/\n";
    }
}

# Admin subdomain (optional)
server {
    listen 80;
    server_name admin.your-new-domain.com;
    
    # Basic auth for admin area
    auth_basic "Admin Area";
    auth_basic_user_file /etc/nginx/.htpasswd;
    
    location / {
        proxy_pass http://edutech_web/admin;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP to HTTPS redirect (Cloudflare가 SSL 처리하므로 로컬에서는 HTTP만)
# server {
#     listen 80;
#     server_name your-new-domain.com www.your-new-domain.com;
#     return 301 https://$server_name$request_uri;
# }

# HTTPS server block (Cloudflare Tunnel 사용시 불필요)
# server {
#     listen 443 ssl http2;
#     server_name your-new-domain.com www.your-new-domain.com;
#     
#     ssl_certificate /path/to/your/cert.pem;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # ... same location blocks as HTTP server
# }